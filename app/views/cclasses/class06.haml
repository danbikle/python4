%h1 Class06
%p
  In Class06 we work with Bokeh:
%p
  %a(href='http://bokeh.pydata.org/en/latest/docs/gallery.html  ' target='x')
    http://bokeh.pydata.org/en/latest/docs/gallery.html
  

%h2#q1 Questions:

%p What is Bokeh?
%p How to use Bokeh?
%p Why use Bokeh?
%p Alternatives to Bokeh?

%hr/

%h2#qs Lab (Quickstart):

%p
  I started this effort by studying many pages I found under this URL:
%p
  %a(href='http://bokeh.pydata.org' target='x')
    http://bokeh.pydata.org
%p I decided that this page is the best place for a Bokeh-Beginner:
%p
  %a(href='http://bokeh.pydata.org/en/latest/docs/user_guide/quickstart.html' target='x')
    http://bokeh.pydata.org/en/latest/docs/user_guide/quickstart.html
%p I like to do my development in an account named ann on on an Ubuntu 16 host.
%p If you want to do it my way, you can find a suitable VirtualBox OVA file at the URL listed below:
%p
  %a(href='https://drive.google.com/open?id=1uqhG7LLJl76DS6Mu8BNe5hnzX5URgXVL' target='x')
    https://drive.google.com/open?id=1uqhG7LLJl76DS6Mu8BNe5hnzX5URgXVL

%p After you start it with the VirtualBox GUI you should see a login screen.

%p The account is 'ann' and the password is 'a'.

%p After you are logged in, both the ann account and Linux host, should be well suited for this class.

%p If, however, you want to update it with the latest Ubuntu 16 patches you could do that with two shell commands which are listed below:

.syntax
  %pre
    %code.bash
      sudo apt-get update
      sudo apt-get upgrade

%p Inside the ann account on this host you will see that I have installed Anaconda Python for you.

%p If you type python at the shell you should see something like this:

.syntax
  %pre
    %code.bash
      $ python
      Python 3.6.3 |Anaconda, Inc.| (default, Oct 13 2017, 12:02:49) 
      [GCC 7.2.0] on linux
      Type "help", "copyright", "credits" or "license" for more information.
      >>>

%p I can see in the above banner that we have Anaconda giving us Python 3.6.3.
%p That combination of Anaconda and Python is well suited for the exercises in this lab.

%p I installed Anaconda with the shell commands listed below:

.syntax
  %pre
    =render 'class01ana2'


%p The labs in this class were written in 2016.

%p They work well on this version of Bokeh: 0.12.6

%p I followed these steps to install Bokeh 0.12.6 on my linux host:
%p
  .syntax
    %pre
      %code.bash
        conda remove bokeh
        conda install bokeh=0.12.6
  
%p Next I created the file listed below:

.syntax
  %pre
    =render 'class06b10'

%p You should copy the above file into /tmp/b10.py and run it.

%p Some features of the above syntax which I like are listed below:
%ul
  %li We have x, y data in separate lists. I see this as the simplest way to feed values to the graph; I like it.
  %li The API calls used to control title, labels, legend, and line_width are easy to follow.

%p I ran it and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python b10.py 
      dan@hp77:/tmp $ Created new window in existing browser session.

%p Then a browser came to life and served me a page:

%iframe(height='700' width='750' src='/class06/b10.html')

%p What we see above is HTML, CSS, and JavaScript rendered by the browser.
%p It is interactive; use your mouse to move it around and change it.
%p All of that complex syntax was generated by Bokeh.
%p I see Bokeh as mechanism which transforms simple declarations into complex web pages.

%p That is a web page so we should deploy it to Heroku so billions of people can see it.

%p
  In class03 (
  %a(href='/cclasses/class03her10')class03-heroku-demo
  ) we saw how to do that so we should do it again:

.syntax
  %pre
    =render 'class06her1'

%p I did the above steps and now I see b10.html at the URL listed below:
%p
  %a(href='https://bokeh9.herokuapp.com/static/b10.html' target='x')
    https://bokeh9.herokuapp.com/static/b10.html

%hr/
%h2#b11 Lab (b11.py):

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06b11'

%p You should copy the above file into /tmp/b11.py and run it.

%p Some features of the above syntax which I like are listed below:
%ul
  %li Several y-values, one x-values.
  %li How to access tools via call to figure()
  %li y_axis_type ="log"
  %li Using circles to decorate some of the lines.

%p I ran it and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python b11.py 
      dan@hp77:/tmp $ Created new window in existing browser session.

%p Then a browser came to life and served me a page:

%iframe(height='700' width='750' src='/class06/b11.html')

%p I commited it to /tmp/bok10 and pushed it to Heroku:

.syntax
  %pre
    %code.bash
      cp /tmp/b11.html /tmp/bok10/static
      cd /tmp/bok10/
      git add .
      git commit -am more-html
      git push heroku master
%p Now we can see it here:

%p
  %a(href='http://bokeh9.herokuapp.com/static/b11.html' target='x')
    http://bokeh9.herokuapp.com/static/b11.html
  
%hr/
%h2#b12 Lab (b12.py):

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06b12'

%p You should copy the above file into /tmp/b12.py and run it.

%p Some features of the above syntax which I like are listed below:
%ul
  %li Demonstration of np.random.random()
  %li Creation of List of color strings
  %li mode="cdn" parameter of output_file()
  %li Large list of tool-types (resize is my favorite)
  %li Interesting call to p.circle()

%p I ran it and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python b12.py 
      dan@hp77:/tmp $ Created new window in existing browser session.

%p Then a browser came to life and served me a page:

%iframe(height='700' width='750' src='/class06/b12.html')

%p I commited it to /tmp/bok10 and pushed it to Heroku:

.syntax
  %pre
    %code.bash
      cp /tmp/b12.html /tmp/bok10/static
      cd /tmp/bok10/
      git add .
      git commit -am more-html
      git push heroku master
%p Now we can see it here:

%p
  %a(href='http://bokeh9.herokuapp.com/static/b12.html' target='x')
    http://bokeh9.herokuapp.com/static/b12.html
  
  
%hr/
%h2#b13 Lab (b13.py):

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06b13'

%p You should copy the above file into /tmp/b13.py and run it.

%p The behavioral feature of this lab is called 'linked panning'.

%p You will see the feature after you move one of the waves with your mouse.

%p Some features of the above syntax which I like are listed below:
%ul
  %li How to call np.linspace()
  %li How to get np.pi
  %li How to call np.sin(), np.cos()
  %li How to call s2.triangle()
  %li How to call s3.square()
  %li Three figures placed in a gridplot
  %li Hide toolbar via: toolbar_location=None

%p The linked-panning feature works because the figures share the same x.

%p I ran it and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python b13.py 
      dan@hp77:/tmp $ Created new window in existing browser session.

%p Then a browser came to life and served me a page:

%iframe(height='400' width='800' src='/class06/b13.html')

%p I commited it to /tmp/bok10 and pushed it to Heroku:

.syntax
  %pre
    %code.bash
      cp /tmp/b13.html /tmp/bok10/static
      cd /tmp/bok10/
      git add .
      git commit -am more-html
      git push heroku master
%p Now we can see it here:

%p
  %a(href='http://bokeh9.herokuapp.com/static/b13.html' target='x')
    http://bokeh9.herokuapp.com/static/b13.html
  
  
%hr/
%h2#b14 Lab (b14.py):

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06b14'

%p You should copy the above file into /tmp/b14.py and run it.

%p The behavioral feature of this lab is called 'linked brushing'.

%p You will see the feature after you select rectangle in either plot.
%p It is easy to understand the feature if your rectangle mathches stacked grid-rectangles.

%p Some features of the above syntax are listed below:
%ul
  %li How to call ColumnDataSource()
  %li gridplot()

%p I ran it and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python b14.py 
      dan@hp77:/tmp $ Created new window in existing browser session.

%p Then a browser came to life and served me a page:

%iframe(height='400' width='800' src='/class06/b14.html')


  
%hr/
%h2#b15 Lab (b15.py):

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06b15'

%p You should copy the above file into /tmp/b15.py and run it.

%p The behavioral feature of this lab is called 'linked brushing'.

%p You will see the feature after you select rectangle in either plot.
%p It is easy to understand the feature if your rectangle mathches stacked grid-rectangles.

%p Some features of the above syntax are listed below:
%ul
  %li How to call bokeh.sampledata.download()
  %li How to call dtype=np.datetime64
  %li How to use x_axis_type="datetime"
  %li How to calculate a moving-avg with np.convolve()
  %li How to call np.convolve()
  %li ref:
  %li
    %a(href='https://docs.scipy.org/doc/numpy/reference/generated/numpy.convolve.html' target='x')
      https://docs.scipy.org/doc/numpy/reference/generated/numpy.convolve.html
  %li
    %a(href='https://en.wikipedia.org/wiki/Convolution#Visual_explanation' target='x')
      https://en.wikipedia.org/wiki/Convolution#Visual_explanation
  
%p I ran it and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python b15.py 
      dan@hp77:/tmp $ Created new window in existing browser session.

%p Then a browser came to life and served me a page:

%iframe(height='400' width='850' src='/class06/b15.html')


  
%hr/
%h2#ch10 Lab (ch10.py):

%p This lab introduces Bokeh Charts which is a powerful API even simpler than the examples of bokeh.plotting API discussed above.

%p Often when I want to visualize some data with Bokeh I prefer Bokeh Charts over Bokeh Plotting.

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch10'

%p You should copy the above file into /tmp/ch10.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li This Bokeh Charts script contains much less syntax than previous examples.
  %li How to call bokeh.charts.Bar()
  %li How to copy bokeh.sampledata.autompg into a DataFrame.

%p You can find information about the autompg data-set at the URL below:
%p
  %a(href='http://www.google.com/search?tbm=isch&q=autompg-data-set' target='x')
    http://www.google.com/search?tbm=isch&q=autompg-data-set
  
  
%p I ran /tmp/ch10.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch10.py 
      dan@hp77:/tmp $ Created new window in existing browser session.

%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch10.html')


%hr/
%h2#ch11 Lab (ch11.py):

%p This lab shows classic group-by and mean aggregation.

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch11'

%p You should copy the above file into /tmp/ch11.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li agg='mean'
  %li Implicit group-by of the column which feeds the label-parameter.
  %li Implicit mapping of mean() to the column which feeds the values-parameter.
  
%p I ran /tmp/ch11.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch11.py 
      dan@hp77:/tmp $ Created new window in existing browser session.

%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch11.html')

%hr/
%h2#ch12 Lab (ch12.py):

%p This lab shows how to control bar_width

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch12'

%p You should copy the above file into /tmp/ch12.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li bar_width=0.4
  %li from bokeh.charts import Bar
  
%p I ran /tmp/ch12.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch12.py 
      dan@hp77:/tmp $ Created new window in existing browser session.

%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch12.html')



%hr/
%h2#ch13 Lab (ch13.py):

%p This lab shows how to control bar color

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch13'

%p You should copy the above file into /tmp/ch13.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li color="wheat"
  %li Adding a line-break to a method-call
  
%p I ran /tmp/ch13.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch13.py 
      dan@hp77:/tmp $ Created new window in existing browser session.

%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch13.html')


%hr/
%h2#ch14 Lab (ch14.py):

%p This lab shows how to visualize a double-group-by

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch14'

%p You should copy the above file into /tmp/ch14.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li double-group-by
  %li agg='median'
  
%p I ran /tmp/ch14.py and saw this in my shell:

.syntax
  %pre
    =render 'class06ch14a'

%p I can see in the above output, origin meaning:
%ul
  %li 1 is USA origin
  %li 2 is Europe origin
  %li 3 is Japan origin
  
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch14.html')

%hr/
%h2#ch15 Lab (ch15.py):

%p This lab shows how to visualize another double-group-by

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch15'

%p You should copy the above file into /tmp/ch15.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li double-group-by
  %li stack='cyl'
  
%p I ran /tmp/ch15.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch15.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch15.html')



%hr/
%h2#ch16 Lab (ch16.py):

%p This lab demonstrates: Boxplot.

%p If you know nothing of boxplot visualization I offer URLs to you:
%ul
  %li    
    %a(href='https://en.wikipedia.org/wiki/Box_plot' target='x')
      https://en.wikipedia.org/wiki/Box_plot
  %li    
    %a(href='http://www.physics.csbsju.edu/stats/box2.html' target='x')
      http://www.physics.csbsju.edu/stats/box2.html

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch16'

%p You should copy the above file into /tmp/ch16.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li BoxPlot()
  %li Implicit group-by of series assigned to label.
  
%p I ran /tmp/ch16.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch16.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch16.html')



%hr/
%h2#ch17 Lab (ch17.py):

%p This lab demonstrates Boxplot combined with double-group-by.


%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch17'

%p You should copy the above file into /tmp/ch17.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li BoxPlot()
  %li label=['cyl', 'origin']
  
%p I ran /tmp/ch17.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch17.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch17.html')




%hr/
%h2#ch18 Lab (ch18.py):

%p This lab demonstrates Boxplot with color


%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch18'

%p You should copy the above file into /tmp/ch18.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li BoxPlot()
  %li color='#00cccc'
  
%p I ran /tmp/ch18.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch18.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch18.html')




%hr/
%h2#ch19 Lab (ch19.py):

%p This lab demonstrates Boxplot with color showing group-by

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch19'

%p You should copy the above file into /tmp/ch19.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li BoxPlot()
  %li label='cyl', color='cyl'
  
%p I ran /tmp/ch19.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch19.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch19.html')




%hr/
%h2#ch20 Lab (ch20.py):

%p This lab demonstrates Boxplot with color on the whiskers

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch20'

%p You should copy the above file into /tmp/ch20.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li BoxPlot()
  %li whisker_color='goldenrod'
  
%p I ran /tmp/ch20.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch20.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch20.html')



%hr/
%h2#ch21 Lab (ch21.py):

%p This lab demonstrates Boxplot with color on the whiskers showing group-by

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch21'

%p You should copy the above file into /tmp/ch21.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li BoxPlot()
  %li whisker_color='cyl'
  
%p I ran /tmp/ch21.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch21.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch21.html')


%hr/
%h2#ch22 Lab (ch22.py):

%p This lab demonstrates Boxplot with outlier display disabled.

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch22'

%p You should copy the above file into /tmp/ch22.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li BoxPlot()
  %li outliers=False
  
%p I ran /tmp/ch22.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch22.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch22.html')



%hr/
%h2#ch23 Lab (ch23.py):

%p This lab demonstrates Boxplot with little squares as outliers.

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch23'

%p You should copy the above file into /tmp/ch23.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li BoxPlot()
  %li marker='square'
  
%p I ran /tmp/ch23.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch23.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch23.html')




%hr/
%h2#ch24 Lab (ch24.py):

%p This lab demonstrates Histogram()

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch24'

%p You should copy the above file into /tmp/ch24.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Histogram()
  %li How to create a histogram of DF column values.
  
%p I ran /tmp/ch24.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch24.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch24.html')



%hr/
%h2#ch25 Lab (ch25.py):

%p This lab demonstrates Histogram()

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch25'

%p You should copy the above file into /tmp/ch25.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Histogram()
  %li Alternate syntax for specifying DF column name
  
%p I ran /tmp/ch25.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch25.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch25.html')





%hr/
%h2#ch26 Lab (ch26.py):

%p This lab demonstrates Histogram()

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch26'

%p You should copy the above file into /tmp/ch26.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Histogram()
  %li Alternate syntax for specifying DF column name:
  %li values='displ'
  
%p I ran /tmp/ch26.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch26.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch26.html')




%hr/
%h2#ch27 Lab (ch27.py):

%p This lab demonstrates Histogram() with explicit count of bins:

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch27'

%p You should copy the above file into /tmp/ch27.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Histogram()
  %li bins=50

  
%p I ran /tmp/ch27.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch27.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch27.html')



%hr/
%h2#ch28 Lab (ch28.py):

%p This lab demonstrates Histogram() with bin colors:

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch28'

%p You should copy the above file into /tmp/ch28.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Histogram()
  %li color='navy'

  
%p I ran /tmp/ch28.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch28.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch28.html')





%hr/
%h2#ch29 Lab (ch29.py):

%p This lab demonstrates Histogram() with bin colors to show group-by:

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch29'

%p You should copy the above file into /tmp/ch29.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Histogram()
  %li color='cyl'

  
%p I ran /tmp/ch29.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch29.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch29.html')



%hr/
%h2#ch30 Lab (ch30.py):

%p This lab demonstrates Scatter() to create a scatter-plot.

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch30'

%p You should copy the above file into /tmp/ch30.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Scatter()
  %li xlabel
  %li ylabel

  
%p I ran /tmp/ch30.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch30.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch30.html')



%hr/
%h2#ch31 Lab (ch31.py):

%p This lab demonstrates Scatter() with color

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch31'

%p You should copy the above file into /tmp/ch31.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Scatter()
  %li color="navy"
  
%p I ran /tmp/ch31.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch31.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch31.html')


%hr/
%h2#ch32 Lab (ch32.py):

%p This lab demonstrates Scatter() with color and group-by

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch32'

%p You should copy the above file into /tmp/ch32.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Scatter()
  %li color='cyl'
  
%p I ran /tmp/ch32.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch32.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch32.html')




%hr/
%h2#ch33 Lab (ch33.py):

%p This lab demonstrates Scatter() with color and group-by and legend

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch33'

%p You should copy the above file into /tmp/ch33.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Scatter()
  %li color='cyl'
  %li legend="top_left"
  
%p I ran /tmp/ch33.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch33.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch33.html')


%hr/
%h2#ch34 Lab (ch34.py):

%p This lab demonstrates Scatter() with color and group-by and legend-sorted

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch34'

%p You should copy the above file into /tmp/ch34.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Scatter()
  %li color='cyl'
  %li legend="top_left"
  %li legend_sort_direction = 'ascending'
  
%p I ran /tmp/ch34.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch34.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch34.html')




%hr/
%h2#ch35 Lab (ch35.py):

%p This lab demonstrates Scatter() with square marker.

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch35'

%p You should copy the above file into /tmp/ch35.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Scatter()
  %li marker='square'

%p I ran /tmp/ch35.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch35.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch35.html')




%hr/
%h2#ch36 Lab (ch36.py):

%p This lab demonstrates Scatter() and group-by using marker shape

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch36'

%p You should copy the above file into /tmp/ch36.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Scatter()
  %li marker='cyl'

%p I ran /tmp/ch36.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch36.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch36.html')



%hr/
%h2#ch37 Lab (ch37.py):

%p This lab demonstrates Scatter() and group-by using marker shape and color

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch37'

%p You should copy the above file into /tmp/ch37.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Scatter()
  %li marker='cyl'
  %li color='cyl'

%p I ran /tmp/ch37.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch37.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch37.html')


%hr/
%h2#ch38 Lab (ch38.py):

%p This lab demonstrates Scatter() and tool-tips

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch38'

%p You should copy the above file into /tmp/ch38.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Scatter()
  %li tooltips=[]
  %li tooltips = tooltips

%p I ran /tmp/ch38.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch38.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='700' width='800' src='/class06/ch38.html')

%hr/
%h2#ch39 Lab (ch39.py):

%p This lab demonstrates Scatter() and tool-tips and defaults

%p I did this lab by creating the file listed below:

.syntax
  %pre
    =render 'class06ch39'

%p You should copy the above file into /tmp/ch39.py and run it.

%p Some features of the above syntax are listed below:
%ul
  %li Scatter()
  %li defaults.width = 800
  %li defaults.height = 800

%p I ran /tmp/ch39.py and saw this in my shell:

.syntax
  %pre
    %code.bash
      dan@hp77:/tmp $ python ch39.py 
      dan@hp77:/tmp $ Created new window in existing browser session.
    
%p Then a browser came to life and served me a page:

%iframe(height='825' width='825' src='/class06/ch39.html')
