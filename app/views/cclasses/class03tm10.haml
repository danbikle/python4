%h2 Class03 Answer:
%h2 Create a simple template-app which displays the value of a Python String

%p I approached this problem with the concept of "Outside-In".

%p "Outside-In" asks me to to create software which is on the outside first.

%p Then I build more software along a path towards the inside.

%p In this example the outside is a file called: "~/fl12/templates/template1.html"

%p The inside is: "~/fl12/fl12.py"

%p So, in this example I just create two files; I have no path of files in between.

%p In later examples I might have several files which illustrate "Outside-In" better.

%p I started by creating a folder:

.syntax
  %pre
    %code.bash mkdir ~/fl12

%p I studied this URL:

%p
  %a(href='http://flask.pocoo.org/docs/0.12/quickstart/#rendering-templates' target='x')
    http://flask.pocoo.org/docs/0.12/quickstart/#rendering-templates

%p I created another folder:

.syntax
  %pre
    %code.bash mkdir ~/fl12/templates

%p I created a "template" named ~/fl12/templates/template1.html with this syntax:

.syntax
  %pre
    =render 'class03tm10a'

%p That completed the "Outside".

%p I look at it and see it telling me that the "Inside" needs to supply a variable named: mypython_string_s

%p I created the "Inside" by writing a script name ~/fl12/fl12.py which is displayed below:

.syntax
  %pre
    =render 'class03tm10b'

%p To finish this exercise, I ran two shell commands to start the Flask server:

.syntax
  %pre
    %code.bash
      cd ~/fl12
      python fl12.py

%p Next, I visited this URL:

%p http://localhost:5000/template1

%p I saw this:

%img(src='/class03/tm10.png')
%hr/

%p
  %a(href='class03#tm')
    Class03 Lab

